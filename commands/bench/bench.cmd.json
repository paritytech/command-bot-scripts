{
  "$schema": "../../schema.cmd.json",
  "command": {
    "description": "Runs `benchmark pallet` or `benchmark overhead` against your PR and commits back updated weights",
    "configuration": {
      "gitlab": {
        "job": {
          "tags": ["bench-bot"]
        },
        "variables": {}
      }
    },
    "presets": {
      "substrate": {
        "repos": ["substrate"],
        "args": {
          "type": { "short": "t", "type_one_of": [ "pallet" ], "description": "Type of bench" },
          "runtime": { "type_one_of": [ "dev" ] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "polkadot": {
        "repos": ["polkadot"],
        "args": {
          "type": { "short": "t", "type_one_of": [ "runtime", "xcm" ], "description": "Type of bench", "default": "runtime" },
          "runtime": { "type_many_of": ["kusama-dev", "polkadot-dev", "rococo-dev", "westend-dev"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "cumulus-assets": {
        "repos": ["cumulus"],
        "args": {
          "type": { "short": "t", "type_one_of": ["xcm", "pallet"], "description": "Type of bench" },
          "runtime": { "type_many_of": ["statemine", "statemint", "test-utils", "westmint"] },
          "kind": { "type_one_of": ["asset"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "cumulus-collectives": {
        "repos": ["cumulus"],
        "args": {
          "type": { "short": "t", "type_one_of": ["xcm", "pallet"], "description": "Type of bench", "default": "pallet" },
          "runtime": { "type_many_of": ["collectives-polkadot"] },
          "kind": { "type_one_of": ["collectives"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "cumulus-contracts": {
        "repos": ["cumulus"],
        "args": {
          "type": { "short": "t", "type_one_of": ["xcm", "pallet"], "description": "Type of bench", "default": "pallet" },
          "runtime": { "type_many_of": ["contracts-rococo"] },
          "kind": { "type_one_of": ["contracts"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "cumulus-starters": {
        "repos": ["cumulus"],
        "args": {
          "type": { "short": "t", "type_one_of": ["xcm", "pallet"], "description": "Type of bench", "default": "pallet" },
          "runtime": { "type_many_of": ["seedling", "shell"], "default": "shell" },
          "kind": { "type_one_of": ["starters"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "cumulus-testing": {
        "repos": ["cumulus"],
        "args": {
          "type": { "short": "t", "type_one_of": ["xcm", "pallet"], "description": "Type of bench", "default": "pallet" },
          "runtime": { "type_many_of": ["penpal", "rococo-parachain"], "default": "penpal" },
          "kind": { "type_one_of": ["testing"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "substrate-overhead": {
        "repos": ["substrate"],
        "description": "Runs `benchmark overhead` and commits back to PR the updated `extrinsic_weights.rs` files",
        "args": {
          "type": { "type_one_of": [ "overhead" ], "description": "Type of bench" },
        }
      },
      "polkadot-overhead": {
        "repos": ["polkadot"],
        "args": {
          "type": { "type_one_of": [ "overhead" ], "description": "Type of bench" },
          "runtime": { "type_many_of": ["kusama-dev", "polkadot-dev", "rococo-dev", "westend-dev"] },
          "pallet": { "type_rule": "/^([a-z_]+)([:]{2}[a-z_]+)?$/" }
        }
      },
      "cumulus-overhead": {
        "repos": ["cumulus"],
        "args": {
          "type": { "type_one_of": [ "overhead" ], "description": "Type of bench" },
          "runtime": { "type_many_of": ["statemine", "statemint", "test-utils", "westmint"], "default": "statemine" },
          "kind": { "type_one_of": ["asset"] }
        }
      }
    }
  }
}
